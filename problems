Problems

public class MyClass {
    public static void main(String args[]) {
      int n=4;
      int space=n;
      int num=1;
      int inc=n-1;
      
      for(int i=1;i<=n;i++){
          
          for(int j=0;j<space;j++)
              System.out.print("  ");
               
        space--;
        int x=num;
        for(int j=0 ; j<i;j++){
            System.out.print(x+" ");
            x-=2;
        }
          num+=inc;
       
        if(i%2==0){
            inc+=2;
               System.out.println();
            continue;
        }
       
           
        System.out.println();
              
      }
    }
}
___________
public class MyClass {
    public static void main(String args[]) {
      int n=5;
      int k=1; int start=1;
      int count=0;
      for(int i=1;i<=n;i++){
          
          int num=start;
          for(int j=0;j<i;j++){
              System.out.print(num+" ");
              num+=2;
          }
          
         start+=k;
         count++;
         
         if(count==2){
             k+=2;
         }
         
         System.out.println();
          
      }
    }
}

______
Aaaaaabbb

public class MyClass {
    public static void main(String args[]) {
      String s="aaaaaabbb";
      
      int c=1;
      
      for(int i=0;i<s.length();i++){
          
          if(i+1<s.length() && s.charAt(i)!=s.charAt(i+1)){
              System.out.print(s.charAt(i)+""+c);
              c=1;
          }
          else{
              c++;
          }
          if(i==s.length()-1){
              System.out.print(s.charAt(i)+""+(c-1));
          }
      }
    }
}
___________
3,6,9,12,15,21 =>18

public class MyClass {
    public static void main(String args[]) {
      
      int[] a={3,9,12,15,18,21};
      
      int diff=Math.min(a[1]-a[0] , a[a.length-1]-a[a.length-2]);

      for(int i=0;i<a.length;i++){
          if( i+1 < a.length && a[i]+diff != a[i+1]){
              System.out.print(a[i]+diff);
              break;
          }
      }
    }
}
______________

public class MyClass {
    public static void main(String args[]) {
        int[] a={3,6,9,15,18,21};
        int n =a.length;
        
        int diff=Math.min(a[1]-a[0],a[n-1]-a[n-2]);

      
        int left = 0, right = n - 1;
        while (left < right) {
            int mid = left + (right - left) / 2;
            if (a[mid]== a[0] + mid*diff) {
                left =mid + 1;
            } else {
                right= mid;
            }
        }

        System.out.println(a[0] + left*diff);
    }
}
____________
Shortest path in matrix

import java.util.*;
public class MyClass {
    public static void main(String args[]) {
     
     int[][] a=new int[8][8];
    // for(int i=0;i<a.length;i++){
      //   for(int j=0;j<a.length;j++) a[i][j]=0;
//    }
    ArrayList<Integer> mini=new ArrayList<Integer>();
    ArrayList<Integer> minj=new ArrayList<Integer>();
    
    int starti=6,startj=2;
    int endi=0,endj=2;
   // boolean visited[][]=new boolean[8][8];
    shortest(mini,minj,a,starti,startj,endi,endj);
    }

  public static void shortest(ArrayList<Integer> mini, ArrayList<Integer> minj,int[][] a,int starti,int startj,int endi,int endj){
      if(starti==endi && startj==endj){
        for(int i=0;i<mini.size();i++){
            System.out.print("("+ mini.get(i)+","+minj.get(i)+")");
        }
        return;
      }
      
      //top
      if(validPlace(starti-1,startj)){
          starti--;
          mini.add(starti);
          minj.add(startj);
          shortest(mini,minj,a,starti,startj,endi,endj);
      }
      
      //moving down
      else if(validPlace(starti+1,startj)){
          starti++;
          mini.add(starti);
          minj.add(startj);
          shortest(mini,minj,a,starti,startj,endi,endj);
      }
      
      //left
      else if(validPlace(starti,startj-1)){
        startj--;
        minj.add(startj);
        mini.add(starti);
          shortest(mini,minj,a,starti,startj,endi,endj);
      }
      
      //right
      else if(validPlace(starti,startj+1)){
        startj++;
        minj.add(startj);
        mini.add(starti);
          shortest(mini,minj,a,starti,startj,endi,endj);
      }
  }
  
  static boolean validPlace(int i,int j){
      return i<8 && i>=0 && j<8 && j>=0;
  }
    
}
_______________________
public class MyClass {
    public static void main(String args[]) {
      //int a[][]=new int[8][8];
      int x=1,y=2; //start
      int p=2,q=7; //end
      
      int rowmove=p-x;
      int colmove=q-y;
      
    //move rows
      
          if(rowmove > 0){
              while(x < p){
                  x++;
                  System.out.println("("+x+","+y+")");
              }
          }
          else{
                 while(x > p){
                  x--;
                  System.out.println("("+x+","+y+")");
              }
          }
    
      
   
          //move columns
               if(colmove > 0){
              while(y < q){
                  y++;
                  System.out.println("("+x+","+y+")");
              }
          }
          else{
                 while(y > q){
                  y--;
                  System.out.println("("+x+","+y+")");
              }
          }
          
    
      
    }
}
____________________

public class MyClass {
    public static void main(String args[]) {
      
      int x=1,y=1; //start
      int p=7,q=7; //end
      
      int rowmove=p-x;
      int colmove=q-y;
    
      
          if(rowmove > 0){ //down
              if(colmove > 0){ //down right cross
                  while((x+1)<=p && (y+1) <= q){
                      x++; y++;
                      System.out.println("("+x+","+y+")");
                  }
              }
              else{ //down left cross
                   while((x+1)<=p && (y-1) >= q){
                      x++; y--;
                      System.out.println("("+x+","+y+")");
                  }
              }
              while(x < p){ //direct down
                  x++;
                  System.out.println("("+x+","+y+")");
              }
          }
          
          else{ //up
                  if(colmove > 0){ //up right cross
                  while((x-1)>=p && (y+1) <= q){
                      x--; y++;
                      System.out.println("("+x+","+y+")");
                  }
              }
              else{ //up left cross
                   while((x-1)>=p && (y-1) >= q){
                      x--; y--;
                      System.out.println("("+x+","+y+")");
                  }
              }
                 while(x > p){ //direct up
                  x--;
                  System.out.println("("+x+","+y+")");
              }
          }
    
      
   
          //move columns right or left
               if(colmove > 0){ //right
               
                  if(colmove > 0){ //up right cross
                  while((x-1)>=p && (y+1) <= q){
                      x--; y++;
                      System.out.println("("+x+","+y+")");
                  }
              }
               else{ //down right cross
                  while((x+1)<=p && (y+1) <= q){
                      x++; y++;
                      System.out.println("("+x+","+y+")");
                  }
              }
              while(y < q){ //direct right
                  y++;
                  System.out.println("("+x+","+y+")");
              }
          }
          else{ //left
               if((x-1) >= p && (y-1) >= q){ // up left cross
                   while((x-1)>p && (y-1) > q){
                      x--; y--;
                      System.out.println("("+x+","+y+")");
                  }
               }
               else{ //down left cross
                    while((x+1)<=p && (y-1) >= q){
                      x++; y--;
                      System.out.println("("+x+","+y+")");
                  }
               }
          
                 while(y > q){ //direct left
                  y--;
                  System.out.println("("+x+","+y+")");
              }
          }
        }
}
____________
Space between

public class Main {
    public static void main(String[] args) {
        String s = "i_am_working_at_zoho"; 
        int len = 26; 

        int extra = len - s.length();

        int atleastspace = extra / (s.split("_").length - 1); 
        int rem = extra % (s.split("_").length - 1); 

        for (int i = 0; i < s.length() ; i++) {
            System.out.print(s.charAt(i));
            if(s.charAt(i) =='_'){
                
                 for (int j = 0; j < atleastspace; j++) {
                 System.out.print("_");
                  }      
            
              if (rem > 0) {
                System.out.print("_"); 
                rem--;
                 }
            }
          }
    }
}
_____________
Search
public class MyClass {
    public static void main(String args[]) {
        int arr[] = {23,2,5,8,11,15};  
        int n = 8;  
       // int l=arr.length-1;  
        int i=0,j=arr.length-1;
        while(i<=j){
            if(arr[i] == n){
                System.out.println(i);
                break;
            }
            if(arr[j] == n){
                System.out.println(j);
                break;
            }
            i++;
            j--;
     }
     
      //  binsrc(arr,0,l,n);   
    /*
    public static void binsrc(int arr[], int f, int l, int n){  
   int mid = (f + l)/2;  
   while( f <= l ){  
      if ( arr[mid] < n ){  
        f = mid + 1;     
      }
      else if ( arr[mid] == n ){  
        System.out.println("index: " + mid);  
        break;  
      }
      
      else{  
         l = mid - 1;  
      }  
      mid = (f + l)/2;  
   }  */
 
 }  
 
}
_________â€¨public class MyClass {
    public static void main(String args[]) {
        int[] arr={23,2,5,8,11,15};
        int target=8;
        int left = 0;
        int right = arr.length - 1;
        int centerLeft = arr.length/2 - 1; 
        int centerRight = arr.length/2;

        while (left <= right || centerLeft >= 0 || centerRight < arr.length{
            //left to right
            if (left <= right && arr[left] == target) {
                System.out.println(left);
                return;
            }
            //right to left
            if (right >= 0 && arr[right] == target) {
                System.out.println(right);
                return;
            }
            //center to left
            if (centerLeft >= 0 && arr[centerLeft] == target) {
                System.out.println(centerLeft);
                return;
            }
            //center to right
            if (centerRight < arr.length && arr[centerRight] == target) {
                System.out.println(centerRight);
                return;
            }
            left++;
            right--;
            centerLeft--;
            centerRight++;
        }
    }
}
______________________

        Reverse 
import java.util.*;
class Main {
public static void main(String args[]) {
Scanner s = new Scanner(System.in); 
String a = s.nextLine();
char b[] = a.toCharArray();
int i = 0, j = b.length - 1;
while (i < j) {
    
if (isAlpha(b[i]) && isAlpha(b[j])) {
    char temp = b[i]; b[i] = b[j];
    b[j] = temp;
    i++;
    j--;
  }
else if (isAlpha(b[i])) j--;
else i++;
}

System.out.print(new String(b)); 
    
}
public static boolean isAlpha(char c) {
 return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z');
} 
    
}
_________________________


Patterns
1 
2 4 
3 5 7 
6 8 10 12 
9 11 13 15 17 
9 11 13 15 17 
6 8 10 12 
3 5 7 
2 4 
1 

public class Main
{
	public static void main(String[] args) {
		int n=5,oddstrt=1,evenstrt=2,x=0;
		int oddincr=2,evenincr=4;
		int downodd=0,downeven=0;
		for(int i=0;i<n;i++){
		    if(i%2==0){ //odd
		        x=oddstrt;
		        if(i==n-(n%2 == 0 ? 2 : 1)){
		            downodd=x;
		        }
		        for(int j=0;j<=i;j++){
		            System.out.print(x+" ");
		            x+=2;
		        }
		          oddstrt+=oddincr;
		          oddincr+=4;
		    }
		    else{
		        x=evenstrt;
		         if(i==n-(n%2 == 0 ? 1 : 2)){
		            downeven=x;
		       
		        }
		        for(int j=0;j<=i;j++){
		            System.out.print(x+" ");
		            x+=2;
		        }
		        evenstrt+=evenincr;
		        evenincr+=4;
		    }
		    System.out.println();
		}


		evenincr-=8; 
	    oddincr-=8;
	boolean flag=(n%2==1);
		//down
		for(int i=0;i<n;i++){
		    if(flag){ //odd
		        x=downodd;

		        for(int j=i;j<n;j++){
		            System.out.print(x+" ");
		            x+=2;
		        }
		          downodd-=oddincr;
		          oddincr-=4;
		    }
		    else{
		        x=downeven;

		        for(int j=i;j<n;j++){
		            System.out.print(x+" ");
		            x+=2;
		        }
		        downeven-=evenincr;
		        evenincr-=4;
		    }
		    flag=!flag;
		    System.out.println();
		    
		}

	}
}
___________________________
1 
4 2 
7 5 3 
12 10 8 6 
17 15 13 11 9 
17 15 13 11 9 
12 10 8 6 
7 5 3 
4 2 
1 

public class Main
{
	public static void main(String[] args) {
		int n=5,oddstrt=1,evenstrt=4,x=0;
		int oddincr=6,evenincr=8;
		int downodd=0,downeven=0;
	
		for(int i=0;i<n;i++){
		    if(i%2==0){ //odd
		        x=oddstrt;
		        if(i==n-(n%2==0?2:1)){
		            downodd=x;
		        }
		        for(int j=0;j<=i;j++){
		            System.out.print(x+" ");
		            
		            x-=2;
		        }
		          oddstrt+=oddincr;
		          oddincr+=4;
		    }
		    else{
		        x=evenstrt;
		         if(i==n-(n%2 == 0 ? 1 : 2)){
		            downeven=x;
		       
		        }
		        for(int j=0;j<=i;j++){
		            System.out.print(x+" ");
		            x-=2;
		        }
		        evenstrt+=evenincr;
		        evenincr+=4;
		    }
		    System.out.println();
		}


evenincr-=8; 
	    oddincr-=8;
	boolean flag=(n%2==1);
		//down
		for(int i=0;i<n;i++){
		    if(flag){ //odd
		        x=downodd;

		        for(int j=i;j<n;j++){
		            System.out.print(x+" ");
		            x-=2;
		        }
		          downodd-=oddincr;
		          oddincr-=4;
		    }
		    else{
		        x=downeven;

		        for(int j=i;j<n;j++){
		            System.out.print(x+" ");
		            x-=2;
		        }
		        downeven-=evenincr;
		        evenincr-=4;
		    }
		    flag=!flag;
		    System.out.println();
		    
		}

	}
}
______________________
      1 
    2 4 
   3 5 7 
  6 8 10 12 
 9 11 13 15 17 
 9 11 13 15 17 
   6 8 10 12 
    3 5 7 
     2 4 
      1 

public class Main
{
	public static void main(String[] args) {
		int n=5,oddstrt=1,evenstrt=2,x=0;
		int oddincr=2,evenincr=4;
		int downodd=0,downeven=0;
		for(int i=0;i<n;i++){
		    for(int j=i;j<n;j++){
		        System.out.print(" ");
		    }
		    if(i%2==0){ //odd
		        x=oddstrt;
		        if(i==n-(n%2 == 0 ? 2 : 1)){
		            downodd=x;
		        }
		        for(int j=0;j<=i;j++){
		            System.out.print(x+" ");
		            x+=2;
		        }
		          oddstrt+=oddincr;
		          oddincr+=4;
		    }
		    else{
		        x=evenstrt;
		         if(i==n-(n%2 == 0 ? 1 : 2)){
		            downeven=x;
		       
		        }
		        for(int j=0;j<=i;j++){
		            System.out.print(x+" ");
		            x+=2;
		        }
		        evenstrt+=evenincr;
		        evenincr+=4;
		    }
		    System.out.println();
		}

		evenincr-=8; 
	    oddincr-=8;
	boolean flag=(n%2==1);
		//down
		for(int i=0;i<n;i++){
		    for(int j=0;j<=i;j++){
		        System.out.print(" ");
		    }
		    if(flag){ //odd
		        x=downodd;
		        for(int j=i;j<n;j++){
		            System.out.print(x+" ");
		            x+=2;
		        }
		          downodd-=oddincr;
		          oddincr-=4;
		    }
		    else{
		        x=downeven;

		        for(int j=i;j<n;j++){
		            System.out.print(x+" ");
		            x+=2;
		        }
		        downeven-=evenincr;
		        evenincr-=4;
		    }
		    flag=!flag;
		    System.out.println();
		    
		}

	}
}
_______________________________
                1 1 
            2 4 4 2 
           3 5 7 7 5 3 
       6 8 10 12 12 10 8 6 
 9 11 13 15 17 17 15 13 11 9 
 9 11 13 15 17 17 15 13 11 9 
  6 8 10 12 12 10 8 6 
         3 5 7 7 5 3 
            2 4 4 2 
               1 1 


public class Main
{
	public static void main(String[] args) {
		int n=5,oddstrt=1,evenstrt=2,x=0;
		int oddincr=2,evenincr=4;
		int downodd=0,downeven=0;
		for(int i=0;i<n;i++){
		    for(int j=i;j<n;j++){
		        System.out.print(" ");
		    }
		    if(i%2==0){ //odd
		        x=oddstrt;
		          if(i==n-(n%2 == 0 ? 2 : 1)){
		            downodd=x;
		        }
		        for(int j=0;j<=i;j++){
		            System.out.print(x+" ");
		            if(j==i){
		                int y=x;
		                for(int k=0;k<=i;k++){
		                    System.out.print(y+" ");
		                    y-=2;
		                }
		            }
		            x+=2;
		        }
		          oddstrt+=oddincr;
		          oddincr+=4;
		    }
		    else{
		        x=evenstrt;
		             if(i==n-(n%2 == 0 ? 1 : 2)){
		            downeven=x;
		       
		        }
		        for(int j=0;j<=i;j++){
		            System.out.print(x+" ");
		            if(j==i){
		                int y=x;
		                for(int k=0;k<=i;k++){
		                    System.out.print(y+" ");
		                    y-=2;
		                }
		            }
		            x+=2;
		        }
		        evenstrt+=evenincr;
		        evenincr+=4;
		    }
		    System.out.println();
		}

//down Side
        evenincr-=8; 
	    oddincr-=8;
	boolean flag=(n%2==1);

		for(int i=0;i<n;i++){
		    for(int j=0;j<=i;j++){
		        System.out.print(" ");
		    }
		    
		    if(flag){ //odd
		        x=downodd;

		        for(int j=i;j<n;j++){
		            System.out.print(x+" ");
		            if(j==n-1){
		                int y=x;
		                for(int k=i;k<n;k++){
		                    System.out.print(y+" ");
		                    y-=2;
		                }
		            }
		            x+=2;
		        }
		          downodd-=oddincr;
		          oddincr-=4;
		    }
		    else{
		        x=downeven;

		        for(int j=i;j<n;j++){
		            System.out.print(x+" ");
		            if(j==n-1){
		                int y=x;
		                for(int k=i;k<n;k++){
		                    System.out.print(y+" ");
		                    y-=2;
		                }
		            }
		            x+=2;
		        }
		        downeven-=evenincr;
		        evenincr-=4;
		    }
		    flag=!flag;
		    System.out.println();   
		}
	}
}
___________________
1 
2 4 
3 5 7 
6 8 10 12 
9 11 13 15 17 
public class Main
{
	public static void main(String[] args) {
		int n=5,oddstrt=1,evenstrt=2,x=0;
		int oddincr=2,evenincr=4;
		for(int i=0;i<n;i++){
		    if(i%2==0){ //odd
		        x=oddstrt;
		        for(int j=0;j<=i;j++){
		            System.out.print(x+" ");
		            x+=2;
		        }
		          oddstrt+=oddincr;
		          oddincr+=4;
		    }
		    else{
		        x=evenstrt;
		        for(int j=0;j<=i;j++){
		            System.out.print(x+" ");
		            x+=2;
		        }
		        evenstrt+=evenincr;
		        evenincr+=4;
		    }
		    System.out.println();
		  
		    
		}
	}
}
(Or)
public class Main {
    public static void main(String[] args) {
       
    int even=2,odd=1,n=10;
    
    for(int i=0;i<n;i++){
        
        if(i%2==1){ //even
           for(int j=0;j<=i;j++){
               System.out.print(even+" ");
              even+=2;
           } 
        }
        else{ //odd
            for(int j=0;j<=i;j++){
               System.out.print(odd+" ");
               odd+=2;
           }
        }
        
        System.out.println();
    }
   
    }
}


___________________________

             24 22 20 18 16 14 
                 17 15 13 11 9 
                   12 10 8 6 
                     7 5 3 
                       4 2 
                          1
public class Main
{
	public static void main(String[] args) {
		int n=5,oddstrt=1,evenstrt=4,x=0;
		int oddincr=6,evenincr=8;
		int downodd=0,downeven=0;
	//odd start
	   for(int i=0;i<( ((n%2)!=0) ? (n/2) : (n/2)-1);i++){
	    oddstrt+=oddincr;
	    oddincr+=4;
          	}

          //even start
	for(int i=0;i<( ((n%2)!=0) ?  (n/2)-1 : (n/2)-1 ); i++){
	  evenstrt+=evenincr;
	  evenincr+=4;
	}
	
downodd=oddstrt;
downeven=evenstrt;
//down Side
	boolean flag=(n%2==1);

		for(int i=0;i<n;i++){
		    for(int j=0;j<=i;j++){
		        System.out.print(" ");
		    }
		    
		    if(flag){ //odd
		        for(int k=i;k<n;k++){
		                    System.out.print(downodd+" ");
		                    downodd-=2;
		                }
		    }
		    else{
		        for(int k=i;k<n;k++){
		           System.out.print(downeven+" ");
		            downeven-=2;
		        }
		    }
		    flag=!flag;
		    System.out.println();
		    
		}

		
	}
}
(Or)
                     
public class Main
{
	public static void main(String[] args) {
		int n=5,oddstrt=1,evenstrt=4,x=0;
		int oddincr=6,evenincr=8;
		int downodd=0,downeven=0;

	//odd start
	   for(int i=0;i<( ((n%2)!=0) ? (n/2) : (n/2)-1);i++){
	    oddstrt+=oddincr;
	    oddincr+=4;
          	}

          //even start
	for(int i=0;i<( ((n%2)!=0) ?  (n/2)-1 : (n/2)-1 ); i++){
	  evenstrt+=evenincr;
	  evenincr+=4;
	}
downodd=oddstrt;
downeven=evenstrt;
//down Side

        evenincr-=4; 
	    oddincr-=4;
	  
	boolean flag=(n%2==1);

		for(int i=0;i<n;i++){
		    for(int j=0;j<=i;j++){
		        System.out.print(" ");
		    }
		    
		    if(flag){ //odd
		        x=downodd;

		                
		                for(int k=i;k<n;k++){
		                    System.out.print(x+" ");
		                    x-=2;
		                }
		            
		           
		      
		          downodd-=oddincr;
		          oddincr-=4;
		    }
		    else{
		        x=downeven;

		        
		                for(int k=i;k<n;k++){
		                    System.out.print(x+" ");
		                    x-=2;
		                }
		        
		      
		        downeven-=evenincr;
		        evenincr-=4;
		    }
		    flag=!flag;
		    System.out.println();
		    
		}

		
	}
}
______________

Patterns
    1 
   2 6 
  3 7 10 
 4 8 11 13 
5 9 12 14 15 

public class Main
{
	public static void main(String[] args) {
		int n=5;
		for(int i=1;i<=n;i++){
		    for(int j=i;j<n;j++){
		        System.out.print(" ");
		    }
		    int dec=(n-1),num=i;
		    for(int j=0;j<i;j++){
		        System.out.print(num+" ");
		        num+=dec;
		        dec--;
		    }
		    System.out.println();
		}
	}
}
_______________________________________
1                                        1  
2  6                               6  2  
3  7  10                   10  7  3  
4  8  11  13        13  11  8  4  
5  9  12  14  15  14  12  9  5 
public class Main
{
	public static void main(String[] args) {
		int n=5;
		int space=7;
		for(int i=1;i<=n;i++){
		    int dec=(n-1),num=i;
		    for(int j=0;j<i;j++){
		        System.out.print(num+"  ");
		        
		        if(j==i-1){
		            for(int k=0;k<space;k++){
		                System.out.print("    ");
		            }
		            space-=2;
		         
		            int rdec=dec+1; 
		            
		            if(i==n){
		                num--;
		                rdec++;
		            }
		            
		           for(int k=((i==n)?1:0);k<i;k++){
		               System.out.print(num+"  ");
		               num-=rdec;
		               rdec++;
		           }
		        }
		        num+=dec;
		        dec--;
		    }
		    System.out.println();
		}
	}
}
___________________
                   1 
                6 2 
            10 7 3 
        13 11 8 4 
   15 14 12 9 5 

public class Main
{
	public static void main(String[] args) {
		
	int strt=1,incr,n=5;
      incr=n;
	for(int i=n;i>=1;i--){
		  for(int j=0;j<i;j++){
		        System.out.print("   ");
		    }
		    int dec=i,num=strt;
		    for(int j=i;j<=n;j++){
		        System.out.print(num+" ");
		        num-=dec;
		        dec++;
		    }
		    strt+=incr;
		    incr--;
		    System.out.println();
		}
	}
}
___________________________
5 9 12 14 15 
4 8 11 13 
3 7 10 
2 6 
1 
public class Main{
	public static void main(String[] args){
		int n=5;
		for(int i=n;i>=1;i--){
		    int dec=(n-1),num=i;
		    for(int j=0;j<i;j++){
		        System.out.print(num+" ");
		        num+=dec;
		        dec--;
		    }
		    System.out.println();
		}
	
	}
	
}
_____________________________
15 14 12 9 5 
     13 11 8 4 
          10 7 3 
               6 2 
                   1 

public class Main
{
	public static void main(String[] args) {
		
	int n=10;	
	int strt=(n*(n+1))/2,incr=2;
	for(int i=n;i>=1;i--){
		   for(int j=n;j>i;j--){
		       System.out.print("   ");
		    }
		    int dec=(n-i)+1 ,num=strt;
		    for(int j=0;j<i;j++){
		        System.out.print(num+" ");
		        num-=dec;
		        dec++;
		    }
		    strt-=incr;
		    incr++;
		    System.out.println();
		}
	}
}
____________________________________

Patterns
1 
3 2 
4 5 6 
10 9 8 7 
11 12 13 14 15 
21 20 19 18 17 16 


public class Main
{
	public static void main(String[] args) {
		int n=6;
		int oddincr=3,evenincr=7,x=0;
		int oddstrt=1,evenstrt=3;
		for(int i=1;i<=n;i++){
		    if(i%2!=0){ //odd row
		       x=oddstrt;
              for(int j=0;j<i;j++){
                  System.out.print(x+" ");
                  x++;
              }	
              oddstrt+=oddincr;
              oddincr+=4;
		    }
		    else{ //even row
		        x=evenstrt;
		        for(int j=0;j<i;j++){
                  System.out.print(x+" ");
                  x--;
              }	
              evenstrt+=evenincr;
              evenincr+=4;
		    }
		    
		    System.out.println();
		}
	}
}
___________________________
22 23 24 25 26 27 28 
21 20 19 18 17 16 
11 12 13 14 15 
10 9 8 7 
4 5 6 
3 2 
1 
public class Main
{
	public static void main(String[] args) {
		int n=8;
		int odddec=3,evendec=7,x=0;
		int oddstrt=0,evenstrt=0; //oddrow,evenrow start value
		if(n%2==0){
		    evenstrt=(n*(n+1))/2;
		    oddstrt=(n-1)*(n)/2 - (n-2);
		}
		else{
		    oddstrt=((n*(n+1))/2)-(n-1);
		    evenstrt=((n-1)*(n))/2;
		}
		//odd dec
	   for(int i=0;i<( ((n%2)!=0) ? (n/2)-1 : (n/2)-2);i++){
	    odddec+=4;
	    if(i==(n/2)-2 && n%2!=0) break;
	    evendec+=4;
        }
	for(int i=n;i>=1;i--){
		    if(i%2!=0){ //odd row
		       x=oddstrt;
              for(int j=0;j<i;j++){
                  System.out.print(x+" ");
                  x++;
              }	
              oddstrt-=odddec;
              odddec-=4;
		    }
		    else{ //even row
		        x=evenstrt;
		        for(int j=0;j<i;j++){
                  System.out.print(x+" ");
                  x--;
              }	
              evenstrt-=evendec;
              evendec-=4;
		    }
		    
		    System.out.println();
		}
	}
}
___________________________

1 2 3 upward

public class Main
{
	public static void main(String[] args){
		int n=5,num=1,x,k,flag,strt=1,inc=1;
		
		for(int i=0;i<n;i++){
		    num=strt;
		    x=i+2;
		    
		    if(i==n-1) x=n;
		    
		    flag=0;
		    
		    for(k=0;k<n;k++){
		        System.out.print(num+" ");
		        num+=x;
		        
		        if(flag==1) x--;
		        else x++;
                
		        if(i==n-1 && flag==0){ //last row
		            x-=2;
		            flag=1;
		        } 
		        else if(x>n){
		            x--;
		            flag=1;
		        }
		    }
		    System.out.println();
		    strt+=inc;
		    inc++;
		}
	}
}
_______________________
public class Main
{
	public static void main(String[] args){
		int n=6,num=1,x,flag,strt=1,inc=1;
		int num_=1,x_,flag_,strt_=1,inc_=2;
		for(int i=0;i<n;i++){
		    num=strt;
		    x=i+2;
		    if(i==n-1) x=n;
		    flag=0;
		    
		    //aaa
		    num_=strt_;
		    x_=i+1;     
 		    if(i==n-1) x_=n-1;
		    flag_=0;
		    
		    for(int j=0;j<n;j++){
		         if(i%2==0 && (j%2)!=0){
		            System.out.printf("%3d ",num); 
		        }
		        else if((i%2)!=0 && j%2==0){
		            System.out.printf("%3d ",num); 
		        }
		        else if(i==j){
		            System.out.printf("%3d ",num);
		        }
		        else{
		            System.out.printf("%3d ",num_); 
		           
		        }
		        num+=x;
		        if(flag==1) x--;
		        else x++;
                
		        if(i==n-1 && flag==0){ //last row
		            x-=2;
		            flag=1;
		        } 
		        else if(x>n){
		            x--;
		            flag=1;
		        }
		        
		        // aaa
		        num_+=x_;
		        if(flag_==1) x_--;
		        else x_++;
                
		        if(i==n-1 && flag_==0){ //last row
		            x_-=2;
		            flag_=1;
		        } 
		        else if(x_>n-1){
		            x_--;
		            flag_=1;
		        }
		    }
		    System.out.println();
		    strt+=inc;
		    inc++;
		    
		    strt_+=inc_;
		    inc_++;
		}
	}
}
_________________
1  2  4  7 11 
 3  5  8 12 16 
 6  9 13 17 20 
10 14 18 21 23 
15 19 22 24 25 
public class Main
{
	public static void main(String[] args){
		int n=5,num=1,x,k,flag,strt=1,inc=2;
		
		for(int i=0;i<n;i++){
		    num=strt;
		    x=i+1;
		    
		    if(i==n-1) x=n-1;
		    
		    flag=0;
		    
		    for(k=0;k<n;k++){
		        System.out.printf("%2d ",num); //+" ");
		        num+=x;
		        
		        if(flag==1) x--;
		        else x++;
                
		        if(i==n-1 && flag==0){ //last row
		            x-=2;
		            flag=1;
		        } 
		        else if(x>n-1){
		            x--;
		            flag=1;
		        }
		    }
		    System.out.println();
		    strt+=inc;
		    inc++;
		}
	}
}________________________________
 
____
___________________
1 2 3 4 5 
2 3 4 5 4 
3 4 5 4 3 
4 5 4 3 2 
5 4 3 2 1 
public class Main
{
	public static void main(String[] args) {
		int n=5,x=0;  //boolean flag;
		
		for(int i=1;i<=n;i++){
		  x=n-1;
		    for(int j=i;j<=n+i-1;j++){
		      System.out.print(((j>n) ? x-- : j) +" ");
		    }
		    System.out.println();
		}
	}
}
____________________
1 2 3 4 5 
2 3 4 5 1 
3 4 5 1 2 
4 5 1 2 3 
5 1 2 3 4 
public class Main
{
	public static void main(String[] args) {
		int n=5,x;
		
		for(int i=1;i<=n;i++){
		  x=1;
		    for(int j=i;j<=n+i-1;j++){
		      System.out.print(((j>n) ? x++ : j) +" ");
		    }
		    System.out.println();
		}
	}
}
_________________________

3 3 3 3 3 
3 2 2 2 3 
3 2 1 2 3 
3 2 2 2 3 
3 3 3 3 3 

public class Main
{
	public static void main(String[] args) {
		
    int i, j, n=3;
    
    for(i=n;i>1;i--)
    {
        for(j=n;j>=1;j--)
        {
            if(j>i) System.out.print(j+" ");
            else System.out.print(i+" "); 
        }
        for(j=2;j<=n;j++)
        {
            if(j>i) System.out.print(j+" ");
            else System.out.print(i+" ");
        }
        System.out.println();
    }    
    for(i=1; i<=n; i++)
    {
        for(j=n;j>=1;j--)
        {
            if(j>i) System.out.print(j+" ");
            else System.out.print(i+" ");
        }
        for(j=2;j<=n;j++)
        {
            if(j>i) System.out.print(j+" ");
            else System.out.print(i+" ");
        }
        System.out.println();
    }

	}
}

(Or)
//half crct

public class Main
{
	public static void main(String[] args) {
		int n=5;
		int ldig=n-1,rdig=n-1,mid=n-1;
		for(int i=1;i<=(n*2)-1;i++){
		    for(int j=1;j<=(n*2)-1 ; j++){
		        
		        if(i==1 || j==1 || i==(n*2)-1 || j==(n*2)-1){
		            System.out.print(n+" ");
		            continue;
		        }
		        
		        if(i==n){
		            int x=n-1,y=2;
		            for(int k=1;k<(n*2)-1;k++){
		                System.out.print(((k<=(n-1)) ? x--  : y++) + " ");
		            }
		            break;
		        }
		        if(i==j){
		            System.out.print(ldig+" ");
		           ldig = (i<=n) ? ldig-1 : ldig+1;
		            if(ldig==1) ldig=2;
		        }
		        else if(i+j == (n*2)){
		            System.out.print(rdig+" ");
		            rdig = (i<=n) ? rdig-1 : rdig+1;
		            if(rdig==1) rdig=2;
		        }
		        else if(j==n){
		            System.out.print(mid+" ");
		            mid = (i<=n) ? mid-1 : mid+1;
		            if(mid==1) mid=2;
		        }
		        else {
		            System.out.print("  ");
		        }
		    }
		    System.out.println();
		}
	}
}
______________________________
Sum of subarray = 0
public class Main
{
	public static void main(String[] args) {
		int n[]={1,2,3,4,-1,-3};
		
		for(int i=0;i<n.length;i++){
		    int sum=0;
		    
		    for(int j=i;j<n.length;j++){
		        sum+=n[j];
		        if(sum==0){
		            for(int k=i;k<=j;k++){
		                System.out.print(n[k]+" ");
		            }
		          //  System.out.println();
		          //  sum=0;
		        }
		    }
		}
	}
}
________________
Remove duplicates

public class Main
{
	public static void main(String[] args) {
		int n[]={1,2,3,3,4,4,4,5};
		
		for(int i=0;i<n.length-1;i++){
		   if(n[i]!=n[i+1]){
		       System.out.print(n[i]+" ");
		   }
		   if(i==n.length-2) System.out.print(n[n.length-1]);
		}
	}
}
_____________________
Palindrome

public class Main
{
	public static void main(String[] args) {
		char[] a={'a','b','c','b','d'};
		
		for(int i=0;i<a.length;i++){
		    for(int j=i+1;j<a.length;j++){
		        if(a[i]==a[j] && isPal(a,i,j)){
		            for(int k=i;k<=j;k++){
		                System.out.print(a[k]);
		            }
		            return;
		        }
		    }
		}
	}
		static boolean isPal(char[] a,int i,int j){
		 while(i<j){
		     if(a[i++]!=a[j--])
		     return false;
		 }
		 
		 return true;
		}
	}
_________________
1  2  4  7 11 
 3  5  8 12 16 
 6  9 13 17 20 
10 14 18 21 23 
15 19 22 24 25 
public class Main
{
	public static void main(String[] args){
		int n=5,num=1,x,k,flag,strt=1,inc=2;
		
		for(int i=0;i<n;i++){
		    num=strt;
		    x=i+1;
		    
		    if(i==n-1) x=n-1;
		    
		    flag=0;
		    
		    for(k=0;k<n;k++){
		        System.out.printf("%2d ",num); //+" ");
		        num+=x;
		        
		        if(flag==1) x--;
		        else x++;
                
		        if(i==n-1 && flag==0){ //last row
		            x-=2;
		            flag=1;
		        } 
		        else if(x>n-1){
		            x--;
		            flag=1;
		        }
		    }
		    System.out.println();
		    strt+=inc;
		    inc++;
		}
	}
}________________________________
  1   3   4  10  11 
  2   5   9  12  19 
  6   8  13  18  20 
  7  14  17  21  24 
 15  16  22  23  25 
public class Main
{
	public static void main(String[] args){
		int n=6,num=1,x,flag,strt=1,inc=1;
		int num_=1,x_,flag_,strt_=1,inc_=2;
		for(int i=0;i<n;i++){
		    num=strt;
		    x=i+2;
		    if(i==n-1) x=n;
		    flag=0;
		    
		    //aaa
		    num_=strt_;
		    x_=i+1;     
 		    if(i==n-1) x_=n-1;
		    flag_=0;
		    
		    for(int j=0;j<n;j++){
		         if(i%2==0 && (j%2)!=0){
		            System.out.printf("%3d ",num); 
		        }
		        else if((i%2)!=0 && j%2==0){
		            System.out.printf("%3d ",num); 
		        }
		        else if(i==j){
		            System.out.printf("%3d ",num);
		        }
		        else{
		            System.out.printf("%3d ",num_); 
		           
		        }
		        num+=x;
		        if(flag==1) x--;
		        else x++;
                
		        if(i==n-1 && flag==0){ //last row
		            x-=2;
		            flag=1;
		        } 
		        else if(x>n){
		            x--;
		            flag=1;
		        }
		        
		        // aaa
		        num_+=x_;
		        if(flag_==1) x_--;
		        else x_++;
                
		        if(i==n-1 && flag_==0){ //last row
		            x_-=2;
		            flag_=1;
		        } 
		        else if(x_>n-1){
		            x_--;
		            flag_=1;
		        }
		    }
		    System.out.println();
		    strt+=inc;
		    inc++;
		    
		    strt_+=inc_;
		    inc_++;
		}
	}
}
____
___________________
1 2 3 4 5 
2 3 4 5 4 
3 4 5 4 3 
4 5 4 3 2 
5 4 3 2 1 
public class Main
{
	public static void main(String[] args) {
		int n=5,x=0;  //boolean flag;
		
		for(int i=1;i<=n;i++){
		  x=n-1;
		    for(int j=i;j<=n+i-1;j++){
		      System.out.print(((j>n) ? x-- : j) +" ");
		    }
		    System.out.println();
		}
	}
}
____________________
1 2 3 4 5 
2 3 4 5 1 
3 4 5 1 2 
4 5 1 2 3 
5 1 2 3 4 
public class Main
{
	public static void main(String[] args) {
		int n=5,x;
		
		for(int i=1;i<=n;i++){
		  x=1;
		    for(int j=i;j<=n+i-1;j++){
		      System.out.print(((j>n) ? x++ : j) +" ");
		    }
		    System.out.println();
		}
	}
}
_________________________

3 3 3 3 3 
3 2 2 2 3 
3 2 1 2 3 
3 2 2 2 3 
3 3 3 3 3 

public class Main
{
	public static void main(String[] args) {
		
    int i, j, n=3;
    
    for(i=n;i>1;i--)
    {
        for(j=n;j>=1;j--)
        {
            if(j>i) System.out.print(j+" ");
            else System.out.print(i+" "); 
        }
        for(j=2;j<=n;j++)
        {
            if(j>i) System.out.print(j+" ");
            else System.out.print(i+" ");
        }
        System.out.println();
    }    
    for(i=1; i<=n; i++)
    {
        for(j=n;j>=1;j--)
        {
            if(j>i) System.out.print(j+" ");
            else System.out.print(i+" ");
        }
        for(j=2;j<=n;j++)
        {
            if(j>i) System.out.print(j+" ");
            else System.out.print(i+" ");
        }
        System.out.println();
    }

	}
}

(Or)
//half crct

public class Main
{
	public static void main(String[] args) {
		int n=5;
		int ldig=n-1,rdig=n-1,mid=n-1;
		for(int i=1;i<=(n*2)-1;i++){
		    for(int j=1;j<=(n*2)-1 ; j++){
		        
		        if(i==1 || j==1 || i==(n*2)-1 || j==(n*2)-1){
		            System.out.print(n+" ");
		            continue;
		        }
		        
		        if(i==n){
		            int x=n-1,y=2;
		            for(int k=1;k<(n*2)-1;k++){
		                System.out.print(((k<=(n-1)) ? x--  : y++) + " ");
		            }
		            break;
		        }
		        if(i==j){
		            System.out.print(ldig+" ");
		           ldig = (i<=n) ? ldig-1 : ldig+1;
		            if(ldig==1) ldig=2;
		        }
		        else if(i+j == (n*2)){
		            System.out.print(rdig+" ");
		            rdig = (i<=n) ? rdig-1 : rdig+1;
		            if(rdig==1) rdig=2;
		        }
		        else if(j==n){
		            System.out.print(mid+" ");
		            mid = (i<=n) ? mid-1 : mid+1;
		            if(mid==1) mid=2;
		        }
		        else {
		            System.out.print("  ");
		        }
		    }
		    System.out.println();
		}
	}
}
______________________________
Sum of subarray = 0
public class Main
{
	public static void main(String[] args) {
		int n[]={1,2,3,4,-1,-3};
		
		for(int i=0;i<n.length;i++){
		    int sum=0;
		    
		    for(int j=i;j<n.length;j++){
		        sum+=n[j];
		        if(sum==0){
		            for(int k=i;k<=j;k++){
		                System.out.print(n[k]+" ");
		            }
		          //  System.out.println();
		          //  sum=0;
		        }
		    }
		}
	}
}
________________
Remove duplicates

public class Main
{
	public static void main(String[] args) {
		int n[]={1,2,3,3,4,4,4,5};
		
		for(int i=0;i<n.length-1;i++){
		   if(n[i]!=n[i+1]){
		       System.out.print(n[i]+" ");
		   }
		   if(i==n.length-2) System.out.print(n[n.length-1]);
		}
	}
}
_____________________
Palindrome

public class Main
{
	public static void main(String[] args) {
		char[] a={'a','b','c','b','d'};
		
		for(int i=0;i<a.length;i++){
		    for(int j=i+1;j<a.length;j++){
		        if(a[i]==a[j] && isPal(a,i,j)){
		            for(int k=i;k<=j;k++){
		                System.out.print(a[k]);
		            }
		            return;
		        }
		    }
		}
	}
		static boolean isPal(char[] a,int i,int j){
		 while(i<j){
		     if(a[i++]!=a[j--])
		     return false;
		 }
		 
		 return true;
		}
	}
_________________
1,0,2,0,3,4,5,0. => 1,2,3,4,5,0,0,0

public class Main
{
	public static void main(String[] args) {
		int a[]={1,0,2,0,3,4,5,0};
		
		int k=0;
		
		for(int i=0;i<a.length;i++){
		    if(a[i]!=0){
		        a[k++]=a[i];
		    }
		}
		
		for(int i=k;i<a.length;i++){
		    a[i]=0;
		}
		
		for(int i=0;i<a.length;i++){
		    System.out.print(a[i]+" ");
		}
	}
}
(Or)

public class Main{
	public static void main(String[] args){
		int a[]={1,0,2,0,3,4,5,0};
		int k=0,j=0;
		for(int i=0;i<a.length;i++){
		    if(a[i]!=0){
		        if(i==j) { 
		            j++;
		            continue;
		        }
		        int temp=a[i]; //2
		        a[i]=a[j];
		        a[j]=temp;
		        
		        j++;
		    }
		}	
		for(int i :a){
		    System.out.print(i+" ");
		}
	}
}
	left push zeros
public class Main{
	public static void main(String[] args){
		int a[]={7,0,2,0,3,4,5,0, 7, 8,9, 0};
		int k=0,j=a.length-1;
		for(int i=a.length-1;i>=0;i--){
		    if(a[i]!=0){		        
		        int temp=a[i]; /
		        a[i]=a[j];
		        a[j]=temp;	        
		        j--;
		    }
		
		}
		for(int i :a){
		    System.out.print(i+" ");
		}
	}
}
___________________________
1 2 3 3 4
2 3 3 4 4
Op: 1 2 3 4
public class Main
{
	public static void main(String[] args) {
		int a[]={1,2,3,3,4,7};
		int b[]={2,3,3,4,4};
		
		int c[]=new int[a.length+b.length];
		
		int i=0,j=0,k=0;
		
		while(i<a.length && j<b.length){
          /* to remove last 2 while loops
                if(i>=a.length && j<b.length) {
		        c[k++]=b[j++];
		        continue;
		    }
		    if(j>=b.length && i<a.length){
		       c[k++]=a[i++]; 
		       continue; 
		    }  */

		    if(a[i] <= b[j]){
		        if(a[i]==b[j]) j++;
		        
		        c[k++]=a[i];
		        i++;
		    }
		    else if(a[i] > b[j]){
		        c[k++]=b[j];
		        j++;
		    }
		    
		}
		
    	while(i<a.length) c[k++] = a[i++];
 		while(j<b.length) c[k++] = b[j++];
		
		for(i=0;i<k-1;i++){
		    if(c[i]!=c[i+1])
		    System.out.print(c[i]+" ");
		    
		    if(i==k-2) System.out.print(c[i+1]);
		}
	}
}

___________________________
Prime

public class Main
{
	public static void main(String[] args) {
		int a[]={1,9,27,35,49,71};
		
		for(int i=0;i<a.length;i++){
		    if(isPrime(a[i])){
		        System.out.print(a[i]+" ");
		    }
		}
	}
	
	public static boolean isPrime(int a){
	    if(a<=1) return false;
	    
	    for(int i=2;i<=(a/2);i++){
	        if(a%i == 0){
	            return false;
	        }
	    }
/*
           if(a==2) return true;
	   if(a<=1 || a%2==0) return false; 
	   for(int i=3;i<=Math.sqrt(a);i+=2){
	       if(a%i ==0) return false;
	   }
*/
	    return true;
	}
}
_____________________________
public class Main
{
	public static void main(String[] args) {
	int n[]={22,33,44,65};
	int min=Integer.MAX_VALUE;
	for(int i=0;i<n.length-1;i++){
	    int diff= n[i+1]-n[i];
	    if(diff < min){
	        min = diff;
	    }
	}

	for(int i=0;i<n.length-1;i++){
	    if(n[i+1]-n[i] == min){
	        System.out.print("("+n[i]+","+n[i+1]+")");
	    }
	}
	
	}
}

___________________-
{2,4},  {5,7}, {1,3},{8,10}
Op:
(1,4)(5,7)(8,10)
public class Main
{
	public static void main(String[] args) {
		int a[][]={
		  {2,4},
		  {5,7},
		  {1,3},
		  {8,10}
		 
		};
		
		int start=Integer.MAX_VALUE,end=Integer.MIN_VALUE;
		for(int i=0;i<a.length;i++){
		    if(a[i][0] < start) start=a[i][0];
		    if(a[i][1] > end) end=a[i][1];
		}
	//	System.out.print(start+" "+end);
	int i=0,j=1;
	while(i<a.length){
	    if(j<a.length && i<a.length && i<j && a[i][1] < a[j][0]){
	        System.out.print("("+start+","+a[i][1]+")");
	        start=a[j][0];
	        i++;
	     //   j++;
	    }
	     j++;
	     if(j==a.length){
	       i++;
	       j=i+1;
	     } 
	   // i++;
	}
	System.out.print("("+start+","+end+")");
	}
}
____________________________________

Right rotate outer square , left rotate next square , repeat,â€¨
Output:â€¨16  1  2  3  4 
15 18 19 20  5 
14 17 25 21  6 
13 24 23 22  7 
12 11 10  9  8 

public class Main
{
  public static void main (String[]args)
  {
	int a[][]={
	  {1,2,3,4,5},
	  {16,17,18,19,6},
	  {15,24,25,20,7},
	  {14,23,22,21,8},
	  {13,12,11,10,9},
    };
    
	int l=0,r=a[0].length-1,t=0,b=a[0].length-1;
	
	while (l<r && t<b){
		if(t%2==0){	//right side
			int temp=a[t][r];
			
			for (int i=r;i>l;i--){
				  a[t][i] = a[t][i-1];
			  }
			
			t++;
			int temp1=a[b][r];
		
			for (int i=b; i>t; i--){
				  a[i][r] = a[i-1][r];
			  }

			a[t][r]=temp;
			r--;
            int temp2=a[b][l];
			//System.out.println(temp2+"##");

			for (int i=l;i<r; i++){
				  a[b][i] = a[b][i+1];
			  }

            
			  a[b][r]=temp1;
              b--;

			for (int i=t-1; i<b;i++){
				  a[i][l] = a[i+1][l];
			  }

			a[b][l]=temp2;
			l++;
		  }

		else{//left rotate
			int temp=a[t][l]; 
			for (int i=l; i<r; i++) {
				  a[t][i] = a[t][i+1];
			  }

			t++;
			int temp1=a[b][l];	//23

			for (int i=b; i>t; i--) {
				  a[i][l]=a[i - 1][l];
			  }

            a[t][l]=temp;
			l++;
			int temp2=a[b][r];	//21

			for (int i=r;i>l; i--) {
				  a[b][i] = a[b][i-1];
			  }

            a[b][l]=temp1;
			b--;

			for(int i=t-1;i<b; i++){
				  a[i][r] = a[i+1][r];
			  }

			a[b][r]=temp2;
			r--;
		  }
	  }

	for (int i=0; i<a.length; i++){
		for (int j=0; j<a.length;j++){
			System.out.printf("%2d ", a[i][j]);	//+" ");
		  }
		System.out.println ();
	  }
  }
}
____________________________________
public class Main{
  public static void main (String[]args){
	int a[][]={
// 	  {1,2,3,4,5,6},
// 	  {20,21,22,23,24,7},
// 	  {19,32,33,34,25,8},
// 	  {18,31,36,35,26,9},
// 	  {17,30,29,28,27,10},
// 	  {16,15,14,13,12,11}
      {1,2,3,4,5},
	  {16,17,18,19,6},
	  {15,24,25,20,7},
	  {14,23,22,21,8},
	  {13,12,11,10,9},
    };
    
	int l=0,r=a[0].length-1,t=0,b=a[0].length-1;
	int count=0;
	while(count<2){
	
	while (l<r && t<b){
	
			int temp=a[t][r];
			
			for (int i=r;i>l;i--){
				  a[t][i] = a[t][i-1];
			}
			
			t++;
			int temp1=a[b][r];
		
			for (int i=b; i>t; i--){
				  a[i][r] = a[i-1][r];
			  }
    
			a[t][r]=temp;
			r--;
            int temp2=a[b][l];
			      //System.out.println(temp2+"##");
            
			for (int i=l;i<r; i++){
				  a[b][i] = a[b][i+1];
			  }

            
			  a[b][r]=temp1;
              b--;

			for (int i=t-1; i<b;i++){
				  a[i][l] = a[i+1][l];
			  }

			a[b][l]=temp2;
			l++;
			

		
	  }
	  
	 
      	 	 for(int i=((a.length%2 !=0)? a.length/2 : (a.length/2)-1 )  ;i>0 ;i--){
	     a[i][i]= a[i-1][i-1];
 	 }
     a[0][0]=0;
     
	  count++;
   l=0;r=a[0].length-1;t=0;b=a[0].length-1;
   }
    
	for (int i=0; i<a.length; i++){
		for (int j=0; j<a.length;j++){
			System.out.printf("%2d ", a[i][j]);	//+" ");
		  }
		System.out.println();
	   }
    }
}
_________________________
Count occurrence (works for negative index too)


public class Main
{
	public static void main(String[] args) {
		int a[]={1,2,-1,4,-1,2,3,4,5};
		int hash[]=new int[getMax(a)];
		int negHash[]=new int[getMin(a)];
		for(int i=0;i<a.length;i++){
		   if(a[i]>0) hash[a[i]]++;
		   else if(a[i]<0) negHash[(a[i] * -1)]++;
		}
		
		for(int i=0;i<a.length;i++){
		    if(a[i]>0 && hash[a[i]]>1){
		        System.out.println(a[i]+"-->"+hash[a[i]]);
		        hash[a[i]]=0;
		    }
		    else if(a[i]<0 && negHash[a[i]* -1] > 1){
		        System.out.println(a[i]+"-->"+negHash[a[i]* -1]);
		        negHash[a[i]* -1]=0;
		    }
		}
		
	}
	static int getMax(int[] a){
	    int max=Integer.MIN_VALUE;
	    for(int i=0;i<a.length;i++){
	        if(a[i]>max) max=a[i];
	    }
	    return max+1;
	}
	
	static int getMin(int[] a){
	    int min=Integer.MAX_VALUE;
	    for(int i=0;i<a.length;i++){
	        if(a[i]<min) min=a[i];
	    }
	    return (min* -1) +1;
	}
}
(Or)
public class Main{
  public static void main (String[]args){
	int a[]={1,2,-1,4,-1,2,3,-1,4,5};
	boolean b[]=new boolean[a.length];
	int count;
	for(int i=0;i<a.length;i++){
	    count=1;
	    b[i]=true;
	    for(int j=i+1;j<a.length;j++){
	        if(a[i] == a[j] && !b[j]){
	            count++;
	            b[j]=true;
	        }
	    }
	    if(count>1){
	        System.out.println(a[i]+"-->"+count);
	    }
	}
    }
}
______________
Largest k digit sum

public class Main{
  public static void main (String[]args){
	int a[]={914,937,1,4,25}; //967. For k=3
	int k=3;
	int sum,max=Integer.MIN_VALUE;
	for(int i=0;i<a.length;i++){
	    sum=0;
	    for(int j=i;j<a.length;j++){
	        sum+=a[j];
	        
	        if( sum>max && isKdigit(k,sum)){
	            max=sum;
	        }
	    }
	}
	System.out.print(max);
    }
    static boolean isKdigit(int k,int sum){
        int len=0;
        while(sum!=0){
            len++;
            sum/=10;
        }
        return len==k;
    }
}
_____________-

public class Main {
    public static void main(String args[]) {
      int a[][]={
          {0,1,0,0,0},
          {0,1,0,0,0},
          {1,0,0,0,0},
          {0,0,1,0,0},
          {0,1,0,0,0}
      };
      int x=0,y=0; //start
      int p=4,q=4; //end
   
     
   System.out.println("(0,0)");
    
      while(true){
         //down
              while(x+1 <= p && a[x+1][y]!=1){ 
                  x++;
                  System.out.println("d("+x+","+y+")");
              }
          
          //down right
              while((x+1)<=p && (y+1) <= q && a[x+1][y+1]!=1){
                      x++; y++;
                      System.out.println("dr("+x+","+y+")");
                  }
                  //right
              while(y+1 <= q && a[x][y+1]!=1){ 
                  y++;
                  System.out.println("r("+x+","+y+")");
              }
          
          //down left
              while((x+1)<=p && (y-1) <= q && y-1>=0 && a[x+1][y-1]!=1){
                      x++; y--;
                      System.out.println("dl("+x+","+y+")");
                  }
          
             
         //upright
              while((x-1)>=p && (y+1) <= q && a[x-1][y+1]!=1){
                      x--; y++;
                      System.out.println("ur("+x+","+y+")");
                  }
          
           //up left
               while((x-1)>=p && (y-1) >= q && a[x-1][y-1]!=1){
                      x--; y--;
                      System.out.println("ul("+x+","+y+")");
                  }
           
              
               //left
                 while(y-1>=p && a[x][y-1]!=1){ 
                  y--;
                  System.out.println("l("+x+","+y+")");
              }
               
    
       
       //up
         while(x-1 >= p && a[x-1][y]!=1){ 
                  x--;
                  System.out.println("u("+x+","+y+")");
              }
             
            if(x==p && y==q) break;
    }
}   
}
________________________________________
import java.util.*;

public class Main{
    static final int[][] dirs = {{-1, 0}, {1, 0}, {0, -1}, {0, 1}, {-1, -1}, {-1, 1}, {1, -1}, {1, 1}};
    static int shortestDist;
    static List<int[]> shortestPath;

    static void dfs(int[][] grid, int x, int y, int dist, List<int[]> path) {
        int n = grid.length;

        // Check if we reached the destination
        if (x == n - 1 && y == n - 1) {
            if (dist < shortestDist) {
                shortestDist = dist;
                shortestPath = new ArrayList<>(path);
            }
            return;
        }

        // Explore neighbors
        for (int[] dir : dirs) {
            int nx = x + dir[0];
            int ny = y + dir[1];

            // Check if the neighbor is within bounds and not a blocked cell
            if (nx >= 0 && nx < n && ny >= 0 && ny < n && grid[nx][ny] == 0) {
                // Mark the cell as visited (temporarily)
                grid[nx][ny] = 1;

                // Add current cell to path
                path.add(new int[]{nx, ny});

                // Explore the neighbor
                dfs(grid, nx, ny, dist+1,path);

                // Remove current cell from path
                path.remove(path.size() - 1);

                // Unmark the cell
                grid[nx][ny] = 0;
            }
        }
    }

    static List<int[]> shortestPath(int[][] grid) {
        int n = grid.length;
        shortestDist = Integer.MAX_VALUE;
        shortestPath = new ArrayList<>();
        List<int[]> path = new ArrayList<>();
        path.add(new int[]{0, 0});

        // Start DFS from the top-left cell
        dfs(grid, 0, 0, 1, path);

        return shortestPath.isEmpty() ? null : shortestPath;
    }

    public static void main(String[] args) {
        int[][] grid = {
            {0, 0, 0, 0, 0},
            {0, 1, 0, 1, 0},
            {1, 0, 0, 1, 0},
            {1, 1, 0, 0, 0},
            {1, 1, 1, 1, 0}
        };

        List<int[]> shortestPath=shortestPath(grid);
        if (shortestPath != null) {
            System.out.println("Shortest path coordinates:");
            for (int[] point:shortestPath) {
                System.out.println("(" + point[0] + ", " + point[1] + ")");
            }
        } else {
            System.out.println("No path exists.");
        }
    }
}
___________________________

1)public class Main {
    public static void main(String[] args) {
        String s = "aaaaaa"; //"Given paragraph seseaarch substrseaingsea";
        String x = "aa"; // "sea";
        int j = 0, k = 0;
        for (int i = 0; i < s.length(); i++) {
           if(s.length()-i < x.length()) break;
            if (s.charAt(i) == x.charAt(0)) {
                int strt = i;
                k = i;
                while (k < s.length() && j < x.length()) {
                    if (s.charAt(k) == x.charAt(j)) {
                        k++;
                        j++;
                    }

                    if (j == x.length()) {
                        System.out.println(strt + " --> " + (k - 1));
                        j = 0;
                        break;
                    } else if (j >= 0 && j < x.length() && s.charAt(k) != x.charAt(j)) {
                        j = 0;
                        break;
                    }
                }
            }
        }
    }
}

_____________________________
2)

public class Main
{
	public static void main(String[] args) {
		String s="apaple"; 
		int count=0;
		boolean b[]=new boolean[s.length()];
		
		for(int i=0;i<s.length();i++){
		    count=1;
		    if(!isVowel(s.charAt(i)) || b[i]) continue;
		    for(int j=i+1;j<s.length();j++){
		        if(s.charAt(i)==s.charAt(j) && !b[j] && isVowel(s.charAt(j))){
		            b[j]=true;
		            count++;
		        }
		    }
		    if(count>0){
		        System.out.println(s.charAt(i)+"-->"+count);
		    }
		}
	}
	static boolean isVowel(char c){
	    return c=='a' || c=='A' || c=='e' || c=='E' || c=='i' || c=='I' ||c=='o' || c=='O' || c=='u' || c=='U';
	}
}
(Or)

public class Main
{
	public static void main(String[] args) {
		String s="apapleUudsfai"; 
		int a=0,A=0,e=0,E=0,i=0,I=0,o=0,O=0,u=0,U=0;
		for(int k=0;k<s.length();k++){
		    char c=s.charAt(k);
		    switch(c){
		        case 'a':a++; break;
		        case 'A':A++; break;
		        case 'e':e++; break;
		        case 'E':E++; break;
		        case 'i':i++; break;
		        case 'I':I++; break;
		        case 'o':o++; break;
		        case 'O':O++; break;
		        case 'u':u++; break;
		        case 'U':U++; break;
		    }
		}
		if(a>0) System.out.print("a-"+a);
		if(A>0) System.out.print("A-"+A);
		if(e>0) System.out.print("e-"+e);
		if(E>0) System.out.print("E-"+E);
		if(i>0) System.out.print("i-"+i);
		if(I>0) System.out.print("I-"+I);
		if(o>0) System.out.print("o-"+o);
		if(O>0) System.out.print("O-"+O);
		if(u>0) System.out.print("u-"+u);
		if(U>0) System.out.print("U-"+U);

}
}


__________________________-
3)
public class Main
{
	public static void main(String[] args) {
		String s="hello welcome"; 
		int a[]=new int[26];
		int b[]=new int[26];
		for(int i=0;i<s.length();i++){
		    
		   if(s.charAt(i)>='a' && s.charAt(i)<='z') a[(int)(s.charAt(i)-'a')]++;
		   
		   else if(s.charAt(i)>='A' && s.charAt(i)<='Z') b[(int)(s.charAt(i)-'A')]++;
		}
		
		for(int i=0;i<s.length();i++){
		    
		   if(s.charAt(i)>='a' && s.charAt(i)<='z' && a[(int)(s.charAt(i)-'a')]!=-1) {
		       System.out.println(s.charAt(i)+"-->"+a[(int)(s.charAt(i)-'a')]);
		       a[(int)(s.charAt(i)-'a')]=-1;
		       }
		   
		   else if(s.charAt(i)>='A' && s.charAt(i)<='Z' && b[(int)(s.charAt(i)-'A')]!=-1) {
		      System.out.println(s.charAt(i)+"-->"+b[(int)(s.charAt(i)-'A')]);
		       b[(int)(s.charAt(i)-'A')]=-1;
		}
		}
		
}
}
(Or)

public class Main
{
	public static void main(String[] args) {
		String s="hell!!o w$elc^ome"; 
		boolean b[]=new boolean[s.length()];
		int count;
		for(int i=0;i<s.length();i++){
		   count=1;
		   if(b[i]) continue;
		   b[i]=true;
		    for(int j=i+1;j<s.length();j++){
		        if(s.charAt(i)==s.charAt(j) && !b[j]){
		            count++;
		            b[j]=true;
		        }
		    }
		    if(count>0){
		        System.out.println(s.charAt(i)+"-->"+count);
		    }
		}

}
}

__________________________-
4)
import java.util.*;
class Main {
        public static void main(String args[]) {
      String a="welcome! zoho# corpo@ration"; 
      int i=0, j=a.length()-1;
      while (j>=0 && i<a.length()) {
            if(!isAlpha(a.charAt(i))){ 
                System.out.print(a.charAt(i));
                i++;
                continue;
            }
            if(!isAlpha(a.charAt(j))) {
                j--;
                continue;
            }
            System.out.print(a.charAt(j));
            j--;
            i++;
       }
}
public static boolean isAlpha(char c) {
return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z');
} 
    
}
(Or)
import java.util.*;
class Main {
        public static void main(String args[]) {
      StringBuilder a=new StringBuilder("welcome! zoho# corpo@ration"); 

      int i=0, j=a.length()-1;
      
while (i<j) {
     if (isAlpha(a.charAt(i)) && isAlpha(a.charAt(j))) {
       char temp = a.charAt(i);
       a.setCharAt(i, a.charAt(j));
       a.setCharAt(j, temp);
        i++;
        j--;
     } 
     else if(isAlpha(a.charAt(i))) j--;
     else i++;
    
}

System.out.print(a);
}
public static boolean isAlpha(char c) {
return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z');
} 
    
}
______________________________
5.   â€œ572+-â€œ     output:5+7-2 =10
import java.util.*;
class Main
{
     public static void main(String[]args){

	String s="572+-";
	int oprcount=0,ans=(int)(s.charAt(0) - '0');
	char opr[]=new char[s.length()];
	
	for(int i=s.length()-1;i>=0;i--){
	    if(!isNum(s.charAt(i))){
	        opr[oprcount++]=s.charAt(i);
	    }
	}
	
	if(s.length()-oprcount != oprcount+1) return;
	
	int k=oprcount-1;
   //System.out.print(oprcount);
    for(int i=1;i<s.length()-oprcount;i++){
        
        char oper = opr[k--];
        //System.out.println(oper+" >> "+s.charAt(i));
        switch(oper){
            case '+': ans+= (int)(s.charAt(i) - '0'); break;
                
            case '-': ans-= (int)(s.charAt(i) - '0'); break;
                
            case '*':ans*= (int)(s.charAt(i) - '0'); break;
            
            case '/':ans/= (int)(s.charAt(i) - '0'); break;
        }
    }
    System.out.print(ans);
  }
  static boolean isNum(char c){
      return (c>='0' && c<='9'); 
  }
}
________________________
6)

public class Main
{
	public static void main(String[] args) {
		String s="thi0s is3 s2ample 1test";
		
		String a[]=s.split("\\s+");		
		for(int i=0;i<a.length;i++){
		    for(int j=i+1;j<a.length;j++){
		        if(num(a[i]) > num(a[j])){
		            String temp=a[i];
		            a[i]=a[j];
		            a[j]=temp;
		        }
		    }
		}
		for(int i=0;i<a.length;i++){
		    for(int j=0;j<a[i].length();j++){
		        if(!(a[i].charAt(j) >='0' && a[i].charAt(j) <= '9')){
		            System.out.print(a[i].charAt(j));
		        }
		    }
		    System.out.print(" ");
		}
	}
	static int num(String s){
	    for(int i=0;i<s.length();i++){
	        if(s.charAt(i) >='0' && s.charAt(i) <= '9'){
	            return (int)(s.charAt(i) - '0');
	        }
	    }
	    return 0;
	}
}

Output:this test sample is 

(Or)

public class Main
{
	public static void main(String[] args) {
		String s="thi0s is3 s2ample 1test";
		
		String a[]=new String[s.length()]; 
        int k=0,strt=0;
		for(int i=0;i<s.length();i++){
		  if(s.charAt(i)==' '){
		      a[k++]= s.substring(strt,i);
		      strt=i+1;
		  }    
		}
		a[k++]=s.substring(strt,s.length());
		for(int i=0;i<k;i++){
		    for(int j=i+1;j<k;j++){
		        if(num(a[i]) > num(a[j])){
		            String temp=a[i];
		            a[i]=a[j];
		            a[j]=temp;
		        }
		    }
		}
		
		for(int i=0;i<k;i++){
		    for(int j=0;j<a[i].length();j++){
		        if(!(a[i].charAt(j) >='0' && a[i].charAt(j) <= '9')){
		            System.out.print(a[i].charAt(j));
		        }
		    }
		    System.out.print(" ");
		}
	}
	static int num(String s){
	    for(int i=0;i<s.length();i++){
	        if(s.charAt(i) >='0' && s.charAt(i) <= '9'){
	            return (int)(s.charAt(i) - '0');
	        }
	    }
	    return 0;
	}
}
(Or)

public class Main
{
	public static void main(String[] args) {
		String s="thi0s is3 s2ample 1test";
		
		String a[]=new String[s.length()]; 
        int k=0,strt=0,i=0,number=0; String x="";
		for(i=0;i<s.length();i++){
		  if(s.charAt(i)==' ' || i==s.length()-1){
		      x="";
		       number=0;
		      for(int p=strt;p<(i!=s.length()-1  ? i : s.length());p++){
		          if(s.charAt(p)>='0' && s.charAt(p)<='9'){
		              number=(int)(s.charAt(p)-'0');
		          }
		          else x+=s.charAt(p);
		      }
		      a[number]=x;
		      strt=i+1;
		  }    
		}

		for(i=0;i<a.length;i++){
		    if(a[i]!=null)
		    System.out.print(a[i]+" ");
		    }
}
}

_________________________
7. Anagram
public class Main
{
	public static void main(String[] args) {
	    String a="race";
	    String b="care";
		boolean x[]=new boolean[b.length()];
        int c=0;
        for(int i=0;i<a.length();i++){
            for(int j=0;j<b.length();j++){
                if(a.charAt(i)==b.charAt(j) && !x[j]){
                    x[j]=true;
                    c++;
                    break;
                }
            }
        }
        if(c==b.length()){
            System.out.print("yes");
        }
        else{
            System.out.print("no");
        }
	}
}
__________________________
8. Maximum substring between two vowels.
public class Main
{
	public static void main(String[] args) {
		String s="achudffhan";
		int count=0,maxlen=0, st=-1,en=-1,  maxi=0,maxj=0;
		for(int i=0;i<s.length();i++){
		    if(isVowel(s.charAt(i))){

		            en=i;
		            if(st==-1) st=i;
		            
		            if(en-st-1 > maxlen){
		                maxlen= en-st-1;
		                maxi=st+1;
		                maxj=en;
		            }
		            st=en;
		    }
		}
		System.out.print(s.substring(maxi,maxj));
	}
	static boolean isVowel(char c){
	   return c=='a' || c=='A' || c=='e' || c=='E' || c=='i' || c=='I' ||c=='o' || c=='O' || c=='u' || c=='U';
	}
}

________________________________

